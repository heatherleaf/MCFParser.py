S --> Bu   [0,0;0,1;0,2]	(* $ --> c   [0,0;0,1;0,2] *)
At --> As   As   [0,0][1,0]	(* @@ --> @   @   [0,0][1,0] *)
AE --> CA   AE   [0,0;0,1;0,2;1,0][1,1][1,2]	(* A --> deg   A   [0,0;0,1;0,2;1,0][1,1][1,2] *)
AF --> DG   Br   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case --> /a,Be   a;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AF --> Dl   CW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case --> /ving,Be   ving;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AG --> DG   Aa   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-f --> /a,Be   a;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AG --> Dl   Al   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-f --> /ving,Be   ving;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AH --> DG   r   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-f;-wh_rel --> /a,Be   a;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AH --> Dl   y   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-f;-wh_rel --> /ving,Be   ving;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AI --> DG   Ab   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-wh_rel --> /a,Be   a;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AI --> Dl   Am   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case;-wh_rel --> /ving,Be   ving;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AJ --> DG   s   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-wh_rel;-f --> /a,Be   a;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AJ --> Dl   z   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Be;-case;-wh_rel;-f --> /ving,Be   ving;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AK --> DG   Bs   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case,-wh_rel --> /a,Be   a;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AK --> Dl   CX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Be;-case,-wh_rel --> /ving,Be   ving;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AL --> DG   Bt   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case,-wh_rel;-f --> /a,Be   a;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AL --> Dl   CY   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Be;-case,-wh_rel;-f --> /ving,Be   ving;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
BX --> Dm   CW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Been;-case --> /ving,Been   ving;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
BY --> Dm   Al   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Been;-case;-f --> /ving,Been   ving;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
BZ --> Dm   y   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Been;-case;-f;-wh_rel --> /ving,Been   ving;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
Ba --> Dm   Am   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Been;-case;-wh_rel --> /ving,Been   ving;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Bb --> Dm   z   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Been;-case;-wh_rel;-f --> /ving,Been   ving;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
Bc --> Dm   CX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Been;-case,-wh_rel --> /ving,Been   ving;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Bd --> Dm   CY   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Been;-case,-wh_rel;-f --> /ving,Been   ving;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Be --> Dh   CO   [0,0][0,1][0,2;1,0;1,1;1,2]	(* Ce --> /t,Ce   t   [0,0][0,1][0,2;1,0;1,1;1,2] *)
Bf --> Dh   CP   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Ce;-f --> /t,Ce   t;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Bg --> Dh   CQ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Ce;-f;-wh_rel --> /t,Ce   t;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Bh --> Dh   Ah   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Ce;-wh_rel --> /t,Ce   t;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Bi --> Dh   Ai   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Ce;-wh_rel;-f --> /t,Ce   t;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AM --> Cz   BX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case --> /Been,Have   Been;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AM --> Dk   CT   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case --> /ven,Have   ven;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AN --> Cz   BY   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-f --> /Been,Have   Been;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AN --> Dk   Aj   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-f --> /ven,Have   ven;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AO --> Cz   BZ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-f;-wh_rel --> /Been,Have   Been;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AO --> Dk   w   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-f;-wh_rel --> /ven,Have   ven;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AP --> Cz   Ba   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-wh_rel --> /Been,Have   Been;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AP --> Dk   Ak   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case;-wh_rel --> /ven,Have   ven;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AQ --> Cz   Bb   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-wh_rel;-f --> /Been,Have   Been;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AQ --> Dk   x   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Have;-case;-wh_rel;-f --> /ven,Have   ven;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
AR --> Cz   Bc   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case,-wh_rel --> /Been,Have   Been;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AR --> Dk   CU   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Have;-case,-wh_rel --> /ven,Have   ven;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AT --> Cz   Bd   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case,-wh_rel;-f --> /Been,Have   Been;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AT --> Dk   CV   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Have;-case,-wh_rel;-f --> /ven,Have   ven;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
j --> Cy   AF   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case --> /Be,Modal   Be;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
j --> DC   AM   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case --> /Have,Modal   Have;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
j --> Dc   CB   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case --> /little_v,Modal   little_v;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
k --> Cy   AG   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-f --> /Be,Modal   Be;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
k --> DC   AN   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-f --> /Have,Modal   Have;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
k --> Dc   Ae   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-f --> /little_v,Modal   little_v;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
l --> Cy   AH   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-f;-wh_rel --> /Be,Modal   Be;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
l --> DC   AO   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-f;-wh_rel --> /Have,Modal   Have;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
l --> Dc   u   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-f;-wh_rel --> /little_v,Modal   little_v;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
m --> Cy   AI   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-wh_rel --> /Be,Modal   Be;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
m --> DC   AP   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-wh_rel --> /Have,Modal   Have;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
m --> Dc   Af   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case;-wh_rel --> /little_v,Modal   little_v;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
n --> Cy   AJ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-wh_rel;-f --> /Be,Modal   Be;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
n --> DC   AQ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-wh_rel;-f --> /Have,Modal   Have;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
n --> Dc   v   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* Modal;-case;-wh_rel;-f --> /little_v,Modal   little_v;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
o --> Cy   AK   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case,-wh_rel --> /Be,Modal   Be;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
o --> DC   AR   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case,-wh_rel --> /Have,Modal   Have;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
o --> Dc   CC   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Modal;-case,-wh_rel --> /little_v,Modal   little_v;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
p --> Cy   AL   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case,-wh_rel;-f --> /Be,Modal   Be;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
p --> DC   AT   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case,-wh_rel;-f --> /Have,Modal   Have;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
p --> Dc   CD   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Modal;-case,-wh_rel;-f --> /little_v,Modal   little_v;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AU --> De   W   [0,0][0,1][0,2;1,0;1,1;1,2]	(* Num --> /n,Num   n   [0,0][0,1][0,2;1,0;1,1;1,2] *)
AU --> Dn   W   [0,0][0,2][1,0;1,1;0,1;1,2]	(* Num --> n==>,Num   n   [0,0][0,2][1,0;1,1;0,1;1,2] *)
q --> De   X   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Num;-f --> /n,Num   n;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
q --> De   Ag   [0,0][0,1][0,2][1,0;1,1;1,2]	(* Num;-f --> /n,Num   n,-f   [0,0][0,1][0,2][1,0;1,1;1,2] *)
q --> Dn   X   [0,0][0,2][1,0;1,1;0,1;1,2][1,3]	(* Num;-f --> n==>,Num   n;-f   [0,0][0,2][1,0;1,1;0,1;1,2][1,3] *)
AV --> De   I   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Num;-f;-wh_rel --> /n,Num   n;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AV --> Dn   I   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4]	(* Num;-f;-wh_rel --> n==>,Num   n;-f;-wh_rel   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4] *)
AW --> De   Y   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* Num;-wh_rel --> /n,Num   n;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
AW --> Dn   Y   [0,0][0,2][1,0;1,1;0,1;1,2][1,3]	(* Num;-wh_rel --> n==>,Num   n;-wh_rel   [0,0][0,2][1,0;1,1;0,1;1,2][1,3] *)
AX --> De   J   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* Num;-wh_rel;-f --> /n,Num   n;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
AX --> Dn   J   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4]	(* Num;-wh_rel;-f --> n==>,Num   n;-wh_rel;-f   [0,0][0,2][1,0;1,1;0,1;1,2][1,3][1,4] *)
Bj --> CZ   [0,3;0,0][0,1][0,2]	(* Pfor --> +case,Pfor;-case   [0,3;0,0][0,1][0,2] *)
Bk --> Ca   [0,3;0,0][0,1][0,2][0,4]	(* Pfor;-f --> +case,Pfor;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
Bl --> Cb   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pfor;-f;-wh_rel --> +case,Pfor;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
AY --> Cc   [0,3;0,0][0,1][0,2][0,4]	(* Pfor;-wh_rel --> +case,Pfor;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
AY --> Ce   [0,0][0,1][0,2][0,3]	(* Pfor;-wh_rel --> +case,Pfor;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
Bm --> Cd   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pfor;-wh_rel;-f --> +case,Pfor;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
Bn --> Cf   [0,3;0,0][0,1][0,2]	(* Pto --> +case,Pto;-case   [0,3;0,0][0,1][0,2] *)
Bo --> Cg   [0,3;0,0][0,1][0,2][0,4]	(* Pto;-f --> +case,Pto;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
Bp --> Ch   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pto;-f;-wh_rel --> +case,Pto;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
AZ --> Ci   [0,3;0,0][0,1][0,2][0,4]	(* Pto;-wh_rel --> +case,Pto;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
AZ --> Ck   [0,0][0,1][0,2][0,3]	(* Pto;-wh_rel --> +case,Pto;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
Bq --> Cj   [0,3;0,0][0,1][0,2][0,4][0,5]	(* Pto;-wh_rel;-f --> +case,Pto;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
Br --> Ap   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* a;-case --> \d,a   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Aa --> Ap   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* a;-case;-f --> \d,a   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Aa --> EC   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* a;-case;-f --> \d,a;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
r --> Ap   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* a;-case;-f;-wh_rel --> \d,a   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
r --> EC   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* a;-case;-f;-wh_rel --> \d,a;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
r --> ED   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* a;-case;-f;-wh_rel --> \d,a;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
Ab --> Ap   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* a;-case;-wh_rel --> \d,a   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Ab --> Aq   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* a;-case;-wh_rel --> \d,a;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
s --> Ap   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* a;-case;-wh_rel;-f --> \d,a   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
s --> Aq   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* a;-case;-wh_rel;-f --> \d,a;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
s --> EE   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* a;-case;-wh_rel;-f --> \d,a;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
Bs --> Ap   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* a;-case,-wh_rel --> \d,a   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Bt --> EC   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* a;-case,-wh_rel;-f --> \d,a;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
Bu --> Di   CO   [0,0][0,1][0,2;1,0;1,1;1,2]	(* c --> /t,c   t   [0,0][0,1][0,2;1,0;1,1;1,2] *)
Bv --> Cu   [0,3;0,0][0,1][0,2]	(* c_rel --> +wh_rel,c_rel;-wh_rel   [0,3;0,0][0,1][0,2] *)
Ac --> Ct   [0,4;0,0][0,1][0,2][0,3]	(* c_rel;-f --> +wh_rel,c_rel;-f;-wh_rel   [0,4;0,0][0,1][0,2][0,3] *)
Ac --> Cv   [0,3;0,0][0,1][0,2][0,4]	(* c_rel;-f --> +wh_rel,c_rel;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4] *)
t --> DD   AU   [0,0][0,1][0,2;1,0;1,1;1,2]	(* d,-case --> /Num,d,-case   Num   [0,0][0,1][0,2;1,0;1,1;1,2] *)
t --> DH   Bv   [0,0][0,1][0,2;1,0;1,1;1,2]	(* d,-case --> /c_rel,d,-case   c_rel   [0,0][0,1][0,2;1,0;1,1;1,2] *)
Ad --> DD   q   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* d,-case;-f --> /Num,d,-case   Num;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Ad --> DH   Ac   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* d,-case;-f --> /c_rel,d,-case   c_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Bw --> DD   AV   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* d,-case;-f;-wh_rel --> /Num,d,-case   Num;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Bx --> DD   AW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* d,-case;-wh_rel --> /Num,d,-case   Num;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
By --> DD   AX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* d,-case;-wh_rel;-f --> /Num,d,-case   Num;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Bz --> Cs   [0,3;0,0][0,1][0,2]	(* d,-case,-wh_rel --> +f,d,-case,-wh_rel;-f   [0,3;0,0][0,1][0,2] *)
CB --> DI   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* little_v;-case --> /d,little_v   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Ae --> DI   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* little_v;-case;-f --> /d,little_v   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Ae --> DJ   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* little_v;-case;-f --> /d,little_v;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
u --> DI   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* little_v;-case;-f;-wh_rel --> /d,little_v   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
u --> DJ   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* little_v;-case;-f;-wh_rel --> /d,little_v;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
u --> DK   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* little_v;-case;-f;-wh_rel --> /d,little_v;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
Af --> DI   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* little_v;-case;-wh_rel --> /d,little_v   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Af --> DL   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* little_v;-case;-wh_rel --> /d,little_v;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
v --> DI   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* little_v;-case;-wh_rel;-f --> /d,little_v   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
v --> DL   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* little_v;-case;-wh_rel;-f --> /d,little_v;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
v --> DM   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* little_v;-case;-wh_rel;-f --> /d,little_v;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
CC --> DI   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* little_v;-case,-wh_rel --> /d,little_v   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
CD --> DJ   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* little_v;-case,-wh_rel;-f --> /d,little_v;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
W --> AE   W   [0,0;0,1;0,2;1,0][1,1][1,2]	(* n --> A   n   [0,0;0,1;0,2;1,0][1,1][1,2] *)
W --> DA   Be   [0,0][0,1][0,2;1,0;1,1;1,2]	(* n --> /Ce,n   Ce   [0,0][0,1][0,2;1,0;1,1;1,2] *)
W --> Dx   AU   [1,0;1,1;1,2;0,0][0,1][0,2]	(* n --> \Num,n   Num   [1,0;1,1;1,2;0,0][0,1][0,2] *)
X --> AE   X   [0,0;0,1;0,2;1,0][1,1][1,2][1,3]	(* n;-f --> A   n;-f   [0,0;0,1;0,2;1,0][1,1][1,2][1,3] *)
X --> DA   Bf   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* n;-f --> /Ce,n   Ce;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
X --> Dx   q   [1,0;1,1;1,2;0,0][0,1][0,2][1,3]	(* n;-f --> \Num,n   Num;-f   [1,0;1,1;1,2;0,0][0,1][0,2][1,3] *)
X --> Dy   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3]	(* n;-f --> \Num,n;-f   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3] *)
I --> AE   I   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4]	(* n;-f;-wh_rel --> A   n;-f;-wh_rel   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4] *)
I --> DA   Bg   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* n;-f;-wh_rel --> /Ce,n   Ce;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
I --> Dx   AV   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4]	(* n;-f;-wh_rel --> \Num,n   Num;-f;-wh_rel   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4] *)
I --> Dy   AW   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3]	(* n;-f;-wh_rel --> \Num,n;-f   Num;-wh_rel   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3] *)
I --> Dz   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4]	(* n;-f;-wh_rel --> \Num,n;-f;-wh_rel   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4] *)
Y --> AE   Y   [0,0;0,1;0,2;1,0][1,1][1,2][1,3]	(* n;-wh_rel --> A   n;-wh_rel   [0,0;0,1;0,2;1,0][1,1][1,2][1,3] *)
Y --> DA   Bh   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* n;-wh_rel --> /Ce,n   Ce;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Y --> Dx   AW   [1,0;1,1;1,2;0,0][0,1][0,2][1,3]	(* n;-wh_rel --> \Num,n   Num;-wh_rel   [1,0;1,1;1,2;0,0][0,1][0,2][1,3] *)
Y --> EA   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3]	(* n;-wh_rel --> \Num,n;-wh_rel   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3] *)
J --> AE   J   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4]	(* n;-wh_rel;-f --> A   n;-wh_rel;-f   [0,0;0,1;0,2;1,0][1,1][1,2][1,3][1,4] *)
J --> DA   Bi   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* n;-wh_rel;-f --> /Ce,n   Ce;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
J --> Dx   AX   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4]	(* n;-wh_rel;-f --> \Num,n   Num;-wh_rel;-f   [1,0;1,1;1,2;0,0][0,1][0,2][1,3][1,4] *)
J --> EA   q   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3]	(* n;-wh_rel;-f --> \Num,n;-wh_rel   Num;-f   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][1,3] *)
J --> EB   AU   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4]	(* n;-wh_rel;-f --> \Num,n;-wh_rel;-f   Num   [1,0;1,1;1,2;0,0][0,1][0,2][0,3][0,4] *)
Ag --> AE   Ag   [0,0;0,1;0,2;1,0][1,1][1,2]	(* n,-f --> A   n,-f   [0,0;0,1;0,2;1,0][1,1][1,2] *)
CE --> Dr   Bj   [0,0][1,1;0,1][0,2;1,0;1,2]	(* p_for --> =>Pfor,p_for   Pfor   [0,0][1,1;0,1][0,2;1,0;1,2] *)
CF --> Dr   Bk   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_for;-f --> =>Pfor,p_for   Pfor;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
CG --> Dr   Bl   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_for;-f;-wh_rel --> =>Pfor,p_for   Pfor;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
CH --> Dr   AY   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_for;-wh_rel --> =>Pfor,p_for   Pfor;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
CI --> Dr   Bm   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_for;-wh_rel;-f --> =>Pfor,p_for   Pfor;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
CJ --> Ds   Bn   [0,0][1,1;0,1][0,2;1,0;1,2]	(* p_to --> =>Pto,p_to   Pto   [0,0][1,1;0,1][0,2;1,0;1,2] *)
CK --> Ds   Bo   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_to;-f --> =>Pto,p_to   Pto;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
CL --> Ds   Bp   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_to;-f;-wh_rel --> =>Pto,p_to   Pto;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
CM --> Ds   AZ   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* p_to;-wh_rel --> =>Pto,p_to   Pto;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
CN --> Ds   Bq   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* p_to;-wh_rel;-f --> =>Pto,p_to   Pto;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
CO --> M   [0,3;0,0][0,1][0,2]	(* t --> +case,t;-case   [0,3;0,0][0,1][0,2] *)
CP --> N   [0,3;0,0][0,1][0,2][0,4]	(* t;-f --> +case,t;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
CQ --> O   [0,3;0,0][0,1][0,2][0,4][0,5]	(* t;-f;-wh_rel --> +case,t;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
Ah --> P   [0,3;0,0][0,1][0,2][0,4]	(* t;-wh_rel --> +case,t;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
Ah --> R   [0,0][0,1][0,2][0,3]	(* t;-wh_rel --> +case,t;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
Ai --> Q   [0,3;0,0][0,1][0,2][0,4][0,5]	(* t;-wh_rel;-f --> +case,t;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
Ai --> T   [0,0][0,1][0,2][0,3][0,4]	(* t;-wh_rel;-f --> +case,t;-case,-wh_rel;-f   [0,0][0,1][0,2][0,3][0,4] *)
H --> CR   H   [1,0][1,1][1,2;0,0;0,1;0,2]	(* v --> tmp   v   [1,0][1,1][1,2;0,0;0,1;0,2] *)
H --> An   [0,3;0,0][0,1][0,2]	(* v --> +case,v;-case   [0,3;0,0][0,1][0,2] *)
H --> Cw   AE   [0,0][0,1][0,2;1,0;1,1;1,2]	(* v --> /A,v   A   [0,0][0,1][0,2;1,0;1,1;1,2] *)
H --> DB   Be   [0,0][0,1][0,2;1,0;1,1;1,2]	(* v --> /Ce,v   Ce   [0,0][0,1][0,2;1,0;1,1;1,2] *)
H --> Df   CE   [0,0][0,1][0,2;1,0;1,1;1,2]	(* v --> /p_for,v   p_for   [0,0][0,1][0,2;1,0;1,1;1,2] *)
Z --> CR   Z   [1,0][1,1][1,2;0,0;0,1;0,2][1,3]	(* v;-f --> tmp   v;-f   [1,0][1,1][1,2;0,0;0,1;0,2][1,3] *)
Z --> AA   [0,3;0,0][0,1][0,2][0,4]	(* v;-f --> +case,v;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
Z --> DB   Bf   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-f --> /Ce,v   Ce;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Z --> Df   CF   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-f --> /p_for,v   p_for;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
a --> CR   a   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4]	(* v;-f;-wh_rel --> tmp   v;-f;-wh_rel   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4] *)
a --> b   [0,3;0,0][0,1][0,2][0,4][0,5]	(* v;-f;-wh_rel --> +case,v;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
a --> DB   Bg   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-f;-wh_rel --> /Ce,v   Ce;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
a --> Df   CG   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-f;-wh_rel --> /p_for,v   p_for;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
K --> CR   K   [1,0][1,1][1,2;0,0;0,1;0,2][1,3]	(* v;-wh_rel --> tmp   v;-wh_rel   [1,0][1,1][1,2;0,0;0,1;0,2][1,3] *)
K --> AB   [0,3;0,0][0,1][0,2][0,4]	(* v;-wh_rel --> +case,v;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
K --> Ao   [0,0][0,1][0,2][0,3]	(* v;-wh_rel --> +case,v;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
K --> DB   Bh   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-wh_rel --> /Ce,v   Ce;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
K --> Df   CH   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* v;-wh_rel --> /p_for,v   p_for;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
L --> CR   L   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4]	(* v;-wh_rel;-f --> tmp   v;-wh_rel;-f   [1,0][1,1][1,2;0,0;0,1;0,2][1,3][1,4] *)
L --> c   [0,3;0,0][0,1][0,2][0,4][0,5]	(* v;-wh_rel;-f --> +case,v;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
L --> Cl   [0,0][0,1][0,2][0,3][0,4]	(* v;-wh_rel;-f --> +case,v;-case,-wh_rel;-f   [0,0][0,1][0,2][0,3][0,4] *)
L --> DB   Bi   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-wh_rel;-f --> /Ce,v   Ce;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
L --> Df   CI   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* v;-wh_rel;-f --> /p_for,v   p_for;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
CT --> DN   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ven;-case --> /d,ven   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Aj --> DN   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ven;-case;-f --> /d,ven   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Aj --> DO   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ven;-case;-f --> /d,ven;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
w --> DN   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ven;-case;-f;-wh_rel --> /d,ven   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
w --> DO   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ven;-case;-f;-wh_rel --> /d,ven;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
w --> DP   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ven;-case;-f;-wh_rel --> /d,ven;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
Ak --> DN   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ven;-case;-wh_rel --> /d,ven   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Ak --> DQ   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ven;-case;-wh_rel --> /d,ven;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
x --> DN   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ven;-case;-wh_rel;-f --> /d,ven   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
x --> DQ   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ven;-case;-wh_rel;-f --> /d,ven;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
x --> DR   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ven;-case;-wh_rel;-f --> /d,ven;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
CU --> DN   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ven;-case,-wh_rel --> /d,ven   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
CV --> DO   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ven;-case,-wh_rel;-f --> /d,ven;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
CW --> DT   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ving;-case --> /d,ving   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Al --> DT   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ving;-case;-f --> /d,ving   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Al --> DU   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ving;-case;-f --> /d,ving;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
y --> DT   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ving;-case;-f;-wh_rel --> /d,ving   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
y --> DU   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ving;-case;-f;-wh_rel --> /d,ving;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
y --> DV   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ving;-case;-f;-wh_rel --> /d,ving;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
Am --> DT   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* ving;-case;-wh_rel --> /d,ving   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Am --> DW   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ving;-case;-wh_rel --> /d,ving;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
z --> DT   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* ving;-case;-wh_rel;-f --> /d,ving   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
z --> DW   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* ving;-case;-wh_rel;-f --> /d,ving;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
z --> DX   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* ving;-case;-wh_rel;-f --> /d,ving;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
CX --> DT   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* ving;-case,-wh_rel --> /d,ving   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
CY --> DU   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* ving;-case,-wh_rel;-f --> /d,ving;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
CZ --> DY   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pfor;-case --> /d,+case,Pfor   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Ca --> DY   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pfor;-case;-f --> /d,+case,Pfor   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Cb --> DY   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pfor;-case;-f;-wh_rel --> /d,+case,Pfor   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
Cc --> DY   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pfor;-case;-wh_rel --> /d,+case,Pfor   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Cd --> DY   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pfor;-case;-wh_rel;-f --> /d,+case,Pfor   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
Ce --> DY   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pfor;-case,-wh_rel --> /d,+case,Pfor   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Cf --> DZ   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pto;-case --> /d,+case,Pto   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Cg --> DZ   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pto;-case;-f --> /d,+case,Pto   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Ch --> DZ   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pto;-case;-f;-wh_rel --> /d,+case,Pto   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
Ci --> DZ   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,Pto;-case;-wh_rel --> /d,+case,Pto   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Cj --> DZ   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,Pto;-case;-wh_rel;-f --> /d,+case,Pto   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
Ck --> DZ   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,Pto;-case,-wh_rel --> /d,+case,Pto   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
M --> Dd   CB   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +case,t;-case --> /little_v,+case,t   little_v;-case   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
M --> Do   AF   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>Be,+case,t   Be;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
M --> Dp   AM   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>Have,+case,t   Have;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
M --> Dq   j   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>Modal,+case,t   Modal;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
M --> Dt   CB   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case --> =>little_v,+case,t   little_v;-case   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
N --> Dd   Ae   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +case,t;-case;-f --> /little_v,+case,t   little_v;-case;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
N --> Do   AG   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>Be,+case,t   Be;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
N --> Dp   AN   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>Have,+case,t   Have;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
N --> Dq   k   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>Modal,+case,t   Modal;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
N --> Dt   Ae   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-f --> =>little_v,+case,t   little_v;-case;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
O --> Dd   u   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> /little_v,+case,t   little_v;-case;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
O --> Do   AH   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>Be,+case,t   Be;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
O --> Dp   AO   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>Have,+case,t   Have;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
O --> Dq   l   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>Modal,+case,t   Modal;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
O --> Dt   u   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-f;-wh_rel --> =>little_v,+case,t   little_v;-case;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
P --> Dd   Af   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> /little_v,+case,t   little_v;-case;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
P --> Do   AI   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>Be,+case,t   Be;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
P --> Dp   AP   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>Have,+case,t   Have;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
P --> Dq   m   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>Modal,+case,t   Modal;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
P --> Dt   Af   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case;-wh_rel --> =>little_v,+case,t   little_v;-case;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
Q --> Dd   v   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> /little_v,+case,t   little_v;-case;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4][1,5] *)
Q --> Do   AJ   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>Be,+case,t   Be;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
Q --> Dp   AQ   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>Have,+case,t   Have;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
Q --> Dq   n   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>Modal,+case,t   Modal;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
Q --> Dt   v   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5]	(* +case,t;-case;-wh_rel;-f --> =>little_v,+case,t   little_v;-case;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4][1,5] *)
R --> Dd   CC   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +case,t;-case,-wh_rel --> /little_v,+case,t   little_v;-case,-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
R --> Do   AK   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>Be,+case,t   Be;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
R --> Dp   AR   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>Have,+case,t   Have;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
R --> Dq   o   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>Modal,+case,t   Modal;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
R --> Dt   CC   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* +case,t;-case,-wh_rel --> =>little_v,+case,t   little_v;-case,-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
T --> Dd   CD   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> /little_v,+case,t   little_v;-case,-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
T --> Do   AL   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>Be,+case,t   Be;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
T --> Dp   AT   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>Have,+case,t   Have;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
T --> Dq   p   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>Modal,+case,t   Modal;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
T --> Dt   CD   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* +case,t;-case,-wh_rel;-f --> =>little_v,+case,t   little_v;-case,-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
An --> Da   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case --> /d,+case,v   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
An --> EF   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case --> \d,+case,v   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
AA --> Da   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-f --> /d,+case,v   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
AA --> EF   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-f --> \d,+case,v   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
AA --> EG   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* +case,v;-case;-f --> \d,+case,v;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
b --> Da   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-f;-wh_rel --> /d,+case,v   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
b --> EF   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-f;-wh_rel --> \d,+case,v   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
b --> EG   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* +case,v;-case;-f;-wh_rel --> \d,+case,v;-f   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
b --> EH   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* +case,v;-case;-f;-wh_rel --> \d,+case,v;-f;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
AB --> Da   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-wh_rel --> /d,+case,v   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
AB --> EF   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,v;-case;-wh_rel --> \d,+case,v   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
AB --> EI   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* +case,v;-case;-wh_rel --> \d,+case,v;-wh_rel   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
c --> Da   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-wh_rel;-f --> /d,+case,v   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
c --> EF   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,v;-case;-wh_rel;-f --> \d,+case,v   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
c --> EI   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3]	(* +case,v;-case;-wh_rel;-f --> \d,+case,v;-wh_rel   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][1,3] *)
c --> EJ   t   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4]	(* +case,v;-case;-wh_rel;-f --> \d,+case,v;-wh_rel;-f   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2][0,3][0,4] *)
Ao --> Da   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case,-wh_rel --> /d,+case,v   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Ao --> EF   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,v;-case,-wh_rel --> \d,+case,v   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Cl --> EG   Bz   [0,0][0,1][0,2][1,0;1,1;1,2][0,3]	(* +case,v;-case,-wh_rel;-f --> \d,+case,v;-f   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][0,3] *)
Cm --> Db   t   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,\d,a;-case --> /d,+case,\d,a   d,-case   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Cn --> Db   Ad   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,\d,a;-case;-f --> /d,+case,\d,a   d,-case;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Co --> Db   Bw   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,\d,a;-case;-f;-wh_rel --> /d,+case,\d,a   d,-case;-f;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
Cp --> Db   Bx   [0,0][0,1][0,2][1,0;1,1;1,2][1,3]	(* +case,\d,a;-case;-wh_rel --> /d,+case,\d,a   d,-case;-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2][1,3] *)
Cq --> Db   By   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4]	(* +case,\d,a;-case;-wh_rel;-f --> /d,+case,\d,a   d,-case;-wh_rel;-f   [0,0][0,1][0,2][1,0;1,1;1,2][1,3][1,4] *)
Cr --> Db   Bz   [0,0][0,1][0,2][1,0;1,1;1,2]	(* +case,\d,a;-case,-wh_rel --> /d,+case,\d,a   d,-case,-wh_rel   [0,0][0,1][0,2][1,0;1,1;1,2] *)
Cs --> DE   q   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +f,d,-case,-wh_rel;-f --> /Num,+f,d,-case,-wh_rel   Num;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Ct --> Dj   CQ   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +wh_rel,c_rel;-f;-wh_rel --> /t,+wh_rel,c_rel   t;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Cu --> Dj   Ah   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* +wh_rel,c_rel;-wh_rel --> /t,+wh_rel,c_rel   t;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Cv --> Dj   Ai   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* +wh_rel,c_rel;-wh_rel;-f --> /t,+wh_rel,c_rel   t;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
DI --> Du   H   [0,0][1,1;0,1][0,2;1,0;1,2]	(* /d,little_v --> =>v,/d,little_v   v   [0,0][1,1;0,1][0,2;1,0;1,2] *)
DJ --> Du   Z   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,little_v;-f --> =>v,/d,little_v   v;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
DK --> Du   a   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,little_v;-f;-wh_rel --> =>v,/d,little_v   v;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
DL --> Du   K   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,little_v;-wh_rel --> =>v,/d,little_v   v;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
DM --> Du   L   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,little_v;-wh_rel;-f --> =>v,/d,little_v   v;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
DN --> Dv   H   [0,0][1,1;0,1][0,2;1,0;1,2]	(* /d,ven --> =>v,/d,ven   v   [0,0][1,1;0,1][0,2;1,0;1,2] *)
DO --> Dv   Z   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ven;-f --> =>v,/d,ven   v;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
DP --> Dv   a   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ven;-f;-wh_rel --> =>v,/d,ven   v;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
DQ --> Dv   K   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ven;-wh_rel --> =>v,/d,ven   v;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
DR --> Dv   L   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ven;-wh_rel;-f --> =>v,/d,ven   v;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
DT --> Dw   H   [0,0][1,1;0,1][0,2;1,0;1,2]	(* /d,ving --> =>v,/d,ving   v   [0,0][1,1;0,1][0,2;1,0;1,2] *)
DU --> Dw   Z   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ving;-f --> =>v,/d,ving   v;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
DV --> Dw   a   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ving;-f;-wh_rel --> =>v,/d,ving   v;-f;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
DW --> Dw   K   [0,0][1,1;0,1][0,2;1,0;1,2][1,3]	(* /d,ving;-wh_rel --> =>v,/d,ving   v;-wh_rel   [0,0][1,1;0,1][0,2;1,0;1,2][1,3] *)
DX --> Dw   L   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4]	(* /d,ving;-wh_rel;-f --> =>v,/d,ving   v;-wh_rel;-f   [0,0][1,1;0,1][0,2;1,0;1,2][1,3][1,4] *)
Dx --> DF   AU   [0,0][0,1][0,2;1,0;1,1;1,2]	(* \Num,n --> /Num,\Num,n   Num   [0,0][0,1][0,2;1,0;1,1;1,2] *)
Dy --> DF   q   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \Num,n;-f --> /Num,\Num,n   Num;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
Dz --> DF   AV   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \Num,n;-f;-wh_rel --> /Num,\Num,n   Num;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
EA --> DF   AW   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \Num,n;-wh_rel --> /Num,\Num,n   Num;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
EB --> DF   AX   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \Num,n;-wh_rel;-f --> /Num,\Num,n   Num;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
Ap --> Cm   [0,3;0,0][0,1][0,2]	(* \d,a --> +case,\d,a;-case   [0,3;0,0][0,1][0,2] *)
Ap --> Cx   AE   [0,0][0,1][0,2;1,0;1,1;1,2]	(* \d,a --> /A,\d,a   A   [0,0][0,1][0,2;1,0;1,1;1,2] *)
EC --> Cn   [0,3;0,0][0,1][0,2][0,4]	(* \d,a;-f --> +case,\d,a;-case;-f   [0,3;0,0][0,1][0,2][0,4] *)
ED --> Co   [0,3;0,0][0,1][0,2][0,4][0,5]	(* \d,a;-f;-wh_rel --> +case,\d,a;-case;-f;-wh_rel   [0,3;0,0][0,1][0,2][0,4][0,5] *)
Aq --> Cp   [0,3;0,0][0,1][0,2][0,4]	(* \d,a;-wh_rel --> +case,\d,a;-case;-wh_rel   [0,3;0,0][0,1][0,2][0,4] *)
Aq --> Cr   [0,0][0,1][0,2][0,3]	(* \d,a;-wh_rel --> +case,\d,a;-case,-wh_rel   [0,0][0,1][0,2][0,3] *)
EE --> Cq   [0,3;0,0][0,1][0,2][0,4][0,5]	(* \d,a;-wh_rel;-f --> +case,\d,a;-case;-wh_rel;-f   [0,3;0,0][0,1][0,2][0,4][0,5] *)
EF --> Dg   CJ   [0,0][0,1][0,2;1,0;1,1;1,2]	(* \d,+case,v --> /p_to,\d,+case,v   p_to   [0,0][0,1][0,2;1,0;1,1;1,2] *)
EG --> Dg   CK   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \d,+case,v;-f --> /p_to,\d,+case,v   p_to;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
EH --> Dg   CL   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \d,+case,v;-f;-wh_rel --> /p_to,\d,+case,v   p_to;-f;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
EI --> Dg   CM   [0,0][0,1][0,2;1,0;1,1;1,2][1,3]	(* \d,+case,v;-wh_rel --> /p_to,\d,+case,v   p_to;-wh_rel   [0,0][0,1][0,2;1,0;1,1;1,2][1,3] *)
EJ --> Dg   CN   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4]	(* \d,+case,v;-wh_rel;-f --> /p_to,\d,+case,v   p_to;-wh_rel;-f   [0,0][0,1][0,2;1,0;1,1;1,2][1,3][1,4] *)
As --> ""	(* @ --> "" *)
E --> "angry"	(* sigma(A) --> "angry" *)
E --> "cheap"	(* sigma(A) --> "cheap" *)
E --> "clever"	(* sigma(A) --> "clever" *)
E --> "gentle"	(* sigma(A) --> "gentle" *)
E --> "honest"	(* sigma(A) --> "honest" *)
E --> "ill"	(* sigma(A) --> "ill" *)
E --> "important"	(* sigma(A) --> "important" *)
E --> "interesting"	(* sigma(A) --> "interesting" *)
E --> "kind"	(* sigma(A) --> "kind" *)
E --> "late"	(* sigma(A) --> "late" *)
E --> "long"	(* sigma(A) --> "long" *)
E --> "lost"	(* sigma(A) --> "lost" *)
E --> "old"	(* sigma(A) --> "old" *)
E --> "poor"	(* sigma(A) --> "poor" *)
E --> "pretty"	(* sigma(A) --> "pretty" *)
E --> "proud"	(* sigma(A) --> "proud" *)
E --> "right"	(* sigma(A) --> "right" *)
E --> "sad"	(* sigma(A) --> "sad" *)
E --> "strange"	(* sigma(A) --> "strange" *)
E --> "young"	(* sigma(A) --> "young" *)
D --> "Ann"	(* sigma(d,-case) --> "Ann" *)
D --> "Chris"	(* sigma(d,-case) --> "Chris" *)
D --> "Clare"	(* sigma(d,-case) --> "Clare" *)
D --> "David"	(* sigma(d,-case) --> "David" *)
D --> "Dick"	(* sigma(d,-case) --> "Dick" *)
D --> "I"	(* sigma(d,-case) --> "I" *)
D --> "Jenny"	(* sigma(d,-case) --> "Jenny" *)
D --> "Jim"	(* sigma(d,-case) --> "Jim" *)
D --> "Joe"	(* sigma(d,-case) --> "Joe" *)
D --> "John"	(* sigma(d,-case) --> "John" *)
D --> "Mary"	(* sigma(d,-case) --> "Mary" *)
D --> "Pat"	(* sigma(d,-case) --> "Pat" *)
D --> "Patrick"	(* sigma(d,-case) --> "Patrick" *)
D --> "Paul"	(* sigma(d,-case) --> "Paul" *)
D --> "Penny"	(* sigma(d,-case) --> "Penny" *)
D --> "Sally"	(* sigma(d,-case) --> "Sally" *)
D --> "Stephen"	(* sigma(d,-case) --> "Stephen" *)
D --> "Sue"	(* sigma(d,-case) --> "Sue" *)
D --> "apples"	(* sigma(d,-case) --> "apples" *)
D --> "eggs"	(* sigma(d,-case) --> "eggs" *)
D --> "he"	(* sigma(d,-case) --> "he" *)
D --> "it"	(* sigma(d,-case) --> "it" *)
D --> "lies"	(* sigma(d,-case) --> "lies" *)
D --> "reading"	(* sigma(d,-case) --> "reading" *)
D --> "they"	(* sigma(d,-case) --> "they" *)
D --> "us"	(* sigma(d,-case) --> "us" *)
U --> "always"	(* sigma(deg) --> "always" *)
U --> "so"	(* sigma(deg) --> "so" *)
U --> "too"	(* sigma(deg) --> "too" *)
U --> "very"	(* sigma(deg) --> "very" *)
B --> "accident"	(* sigma(n) --> "accident" *)
B --> "answer"	(* sigma(n) --> "answer" *)
B --> "apple"	(* sigma(n) --> "apple" *)
B --> "bill"	(* sigma(n) --> "bill" *)
B --> "book"	(* sigma(n) --> "book" *)
B --> "box"	(* sigma(n) --> "box" *)
B --> "boy"	(* sigma(n) --> "boy" *)
B --> "brother"	(* sigma(n) --> "brother" *)
B --> "cake"	(* sigma(n) --> "cake" *)
B --> "car"	(* sigma(n) --> "car" *)
B --> "cat"	(* sigma(n) --> "cat" *)
B --> "clothe"	(* sigma(n) --> "clothe" *)
B --> "dog"	(* sigma(n) --> "dog" *)
B --> "father"	(* sigma(n) --> "father" *)
B --> "food"	(* sigma(n) --> "food" *)
B --> "friend"	(* sigma(n) --> "friend" *)
B --> "girl"	(* sigma(n) --> "girl" *)
B --> "house"	(* sigma(n) --> "house" *)
B --> "leg"	(* sigma(n) --> "leg" *)
B --> "letter"	(* sigma(n) --> "letter" *)
B --> "lie"	(* sigma(n) --> "lie" *)
B --> "man"	(* sigma(n) --> "man" *)
B --> "mother"	(* sigma(n) --> "mother" *)
B --> "picture"	(* sigma(n) --> "picture" *)
B --> "present"	(* sigma(n) --> "present" *)
B --> "sailor"	(* sigma(n) --> "sailor" *)
B --> "ship"	(* sigma(n) --> "ship" *)
B --> "story"	(* sigma(n) --> "story" *)
B --> "sweet"	(* sigma(n) --> "sweet" *)
B --> "ticket"	(* sigma(n) --> "ticket" *)
B --> "town"	(* sigma(n) --> "town" *)
B --> "treat"	(* sigma(n) --> "treat" *)
B --> "trick"	(* sigma(n) --> "trick" *)
B --> "uncle"	(* sigma(n) --> "uncle" *)
B --> "woman"	(* sigma(n) --> "woman" *)
C --> "accident"	(* sigma(n,-f) --> "accident" *)
C --> "answer"	(* sigma(n,-f) --> "answer" *)
C --> "apple"	(* sigma(n,-f) --> "apple" *)
C --> "bill"	(* sigma(n,-f) --> "bill" *)
C --> "book"	(* sigma(n,-f) --> "book" *)
C --> "box"	(* sigma(n,-f) --> "box" *)
C --> "boy"	(* sigma(n,-f) --> "boy" *)
C --> "brother"	(* sigma(n,-f) --> "brother" *)
C --> "cake"	(* sigma(n,-f) --> "cake" *)
C --> "car"	(* sigma(n,-f) --> "car" *)
C --> "cat"	(* sigma(n,-f) --> "cat" *)
C --> "clothe"	(* sigma(n,-f) --> "clothe" *)
C --> "dog"	(* sigma(n,-f) --> "dog" *)
C --> "father"	(* sigma(n,-f) --> "father" *)
C --> "food"	(* sigma(n,-f) --> "food" *)
C --> "friend"	(* sigma(n,-f) --> "friend" *)
C --> "girl"	(* sigma(n,-f) --> "girl" *)
C --> "house"	(* sigma(n,-f) --> "house" *)
C --> "leg"	(* sigma(n,-f) --> "leg" *)
C --> "letter"	(* sigma(n,-f) --> "letter" *)
C --> "lie"	(* sigma(n,-f) --> "lie" *)
C --> "man"	(* sigma(n,-f) --> "man" *)
C --> "mother"	(* sigma(n,-f) --> "mother" *)
C --> "picture"	(* sigma(n,-f) --> "picture" *)
C --> "present"	(* sigma(n,-f) --> "present" *)
C --> "sailor"	(* sigma(n,-f) --> "sailor" *)
C --> "ship"	(* sigma(n,-f) --> "ship" *)
C --> "story"	(* sigma(n,-f) --> "story" *)
C --> "sweet"	(* sigma(n,-f) --> "sweet" *)
C --> "ticket"	(* sigma(n,-f) --> "ticket" *)
C --> "town"	(* sigma(n,-f) --> "town" *)
C --> "treat"	(* sigma(n,-f) --> "treat" *)
C --> "trick"	(* sigma(n,-f) --> "trick" *)
C --> "uncle"	(* sigma(n,-f) --> "uncle" *)
C --> "woman"	(* sigma(n,-f) --> "woman" *)
AC --> "today"	(* sigma(tmp) --> "today" *)
AC --> "yesterday"	(* sigma(tmp) --> "yesterday" *)
d --> "matter"	(* sigma(v) --> "matter" *)
d --> "rule"	(* sigma(v) --> "rule" *)
d --> "wait"	(* sigma(v) --> "wait" *)
Au --> "come"	(* sigma(/A,v) --> "come" *)
Av --> ""	(* sigma(/A,\d,a) --> "" *)
Aw --> "will"	(* sigma(/Be,Modal) --> "will" *)
Ax --> "have"	(* sigma(/Been,Have) --> "have" *)
Ay --> "fact"	(* sigma(/Ce,n) --> "fact" *)
e --> "forget"	(* sigma(/Ce,v) --> "forget" *)
e --> "know"	(* sigma(/Ce,v) --> "know" *)
e --> "remember"	(* sigma(/Ce,v) --> "remember" *)
Az --> "will"	(* sigma(/Have,Modal) --> "will" *)
V --> "a"	(* sigma(/Num,d,-case) --> "a" *)
V --> "my"	(* sigma(/Num,d,-case) --> "my" *)
V --> "one"	(* sigma(/Num,d,-case) --> "one" *)
V --> "the"	(* sigma(/Num,d,-case) --> "the" *)
AD --> "which"	(* sigma(/Num,+f,d,-case,-wh_rel) --> "which" *)
AD --> "who"	(* sigma(/Num,+f,d,-case,-wh_rel) --> "who" *)
BA --> "s"	(* sigma(/Num,\Num,n) --> "s" *)
BB --> "be"	(* sigma(/a,Be) --> "be" *)
BC --> "the"	(* sigma(/c_rel,d,-case) --> "the" *)
BD --> "for"	(* sigma(/d,+case,Pfor) --> "for" *)
BE --> "to"	(* sigma(/d,+case,Pto) --> "to" *)
F --> "bring"	(* sigma(/d,+case,v) --> "bring" *)
F --> "buy"	(* sigma(/d,+case,v) --> "buy" *)
F --> "get"	(* sigma(/d,+case,v) --> "get" *)
F --> "hate"	(* sigma(/d,+case,v) --> "hate" *)
F --> "have"	(* sigma(/d,+case,v) --> "have" *)
F --> "leave"	(* sigma(/d,+case,v) --> "leave" *)
F --> "like"	(* sigma(/d,+case,v) --> "like" *)
F --> "love"	(* sigma(/d,+case,v) --> "love" *)
F --> "pay"	(* sigma(/d,+case,v) --> "pay" *)
F --> "sell"	(* sigma(/d,+case,v) --> "sell" *)
F --> "send"	(* sigma(/d,+case,v) --> "send" *)
F --> "surprise"	(* sigma(/d,+case,v) --> "surprise" *)
F --> "take"	(* sigma(/d,+case,v) --> "take" *)
F --> "tell"	(* sigma(/d,+case,v) --> "tell" *)
F --> "write"	(* sigma(/d,+case,v) --> "write" *)
BF --> ""	(* sigma(/d,+case,\d,a) --> "" *)
BG --> "will"	(* sigma(/little_v,Modal) --> "will" *)
BH --> "doesnt"	(* sigma(/little_v,+case,t) --> "doesnt" *)
BI --> ""	(* sigma(/n,Num) --> "" *)
BJ --> "pay"	(* sigma(/p_for,v) --> "pay" *)
G --> "explain"	(* sigma(/p_to,\d,+case,v) --> "explain" *)
G --> "give"	(* sigma(/p_to,\d,+case,v) --> "give" *)
G --> "sell"	(* sigma(/p_to,\d,+case,v) --> "sell" *)
G --> "show"	(* sigma(/p_to,\d,+case,v) --> "show" *)
G --> "teach"	(* sigma(/p_to,\d,+case,v) --> "teach" *)
G --> "tell"	(* sigma(/p_to,\d,+case,v) --> "tell" *)
BK --> "that"	(* sigma(/t,Ce) --> "that" *)
BL --> ""	(* sigma(/t,c) --> "" *)
BM --> ""	(* sigma(/t,+wh_rel,c_rel) --> "" *)
BN --> "have"	(* sigma(/ven,Have) --> "have" *)
BO --> "be"	(* sigma(/ving,Be) --> "be" *)
BP --> "been"	(* sigma(/ving,Been) --> "been" *)
BQ --> "-s"	(* sigma(n==>,Num) --> "-s" *)
f --> ""	(* sigma(=>Be,+case,t) --> "" *)
f --> "-ed"	(* sigma(=>Be,+case,t) --> "-ed" *)
f --> "-s"	(* sigma(=>Be,+case,t) --> "-s" *)
g --> ""	(* sigma(=>Have,+case,t) --> "" *)
g --> "-ed"	(* sigma(=>Have,+case,t) --> "-ed" *)
g --> "-s"	(* sigma(=>Have,+case,t) --> "-s" *)
h --> ""	(* sigma(=>Modal,+case,t) --> "" *)
h --> "-ed"	(* sigma(=>Modal,+case,t) --> "-ed" *)
h --> "-s"	(* sigma(=>Modal,+case,t) --> "-s" *)
BR --> ""	(* sigma(=>Pfor,p_for) --> "" *)
BT --> ""	(* sigma(=>Pto,p_to) --> "" *)
i --> ""	(* sigma(=>little_v,+case,t) --> "" *)
i --> "-ed"	(* sigma(=>little_v,+case,t) --> "-ed" *)
i --> "-s"	(* sigma(=>little_v,+case,t) --> "-s" *)
BU --> ""	(* sigma(=>v,/d,little_v) --> "" *)
BV --> "-en"	(* sigma(=>v,/d,ven) --> "-en" *)
BW --> "-ing"	(* sigma(=>v,/d,ving) --> "-ing" *)
AE --> E   At   [1,0][0,0][1,1]	(* A --> sigma(A)   @@   [1,0][0,0][1,1] *)
t --> D   At   [1,0][0,0][1,1]	(* d,-case --> sigma(d,-case)   @@   [1,0][0,0][1,1] *)
CA --> U   At   [1,0][0,0][1,1]	(* deg --> sigma(deg)   @@   [1,0][0,0][1,1] *)
W --> B   At   [1,0][0,0][1,1]	(* n --> sigma(n)   @@   [1,0][0,0][1,1] *)
Ag --> C   At   [1,0][0,0][1,1]	(* n,-f --> sigma(n,-f)   @@   [1,0][0,0][1,1] *)
CR --> AC   At   [1,0][0,0][1,1]	(* tmp --> sigma(tmp)   @@   [1,0][0,0][1,1] *)
H --> d   At   [1,0][0,0][1,1]	(* v --> sigma(v)   @@   [1,0][0,0][1,1] *)
Cw --> Au   At   [1,0][0,0][1,1]	(* /A,v --> sigma(/A,v)   @@   [1,0][0,0][1,1] *)
Cx --> Av   At   [1,0][0,0][1,1]	(* /A,\d,a --> sigma(/A,\d,a)   @@   [1,0][0,0][1,1] *)
Cy --> Aw   At   [1,0][0,0][1,1]	(* /Be,Modal --> sigma(/Be,Modal)   @@   [1,0][0,0][1,1] *)
Cz --> Ax   At   [1,0][0,0][1,1]	(* /Been,Have --> sigma(/Been,Have)   @@   [1,0][0,0][1,1] *)
DA --> Ay   At   [1,0][0,0][1,1]	(* /Ce,n --> sigma(/Ce,n)   @@   [1,0][0,0][1,1] *)
DB --> e   At   [1,0][0,0][1,1]	(* /Ce,v --> sigma(/Ce,v)   @@   [1,0][0,0][1,1] *)
DC --> Az   At   [1,0][0,0][1,1]	(* /Have,Modal --> sigma(/Have,Modal)   @@   [1,0][0,0][1,1] *)
DD --> V   At   [1,0][0,0][1,1]	(* /Num,d,-case --> sigma(/Num,d,-case)   @@   [1,0][0,0][1,1] *)
DE --> AD   At   [1,0][0,0][1,1]	(* /Num,+f,d,-case,-wh_rel --> sigma(/Num,+f,d,-case,-wh_rel)   @@   [1,0][0,0][1,1] *)
DF --> BA   At   [1,0][0,0][1,1]	(* /Num,\Num,n --> sigma(/Num,\Num,n)   @@   [1,0][0,0][1,1] *)
DG --> BB   At   [1,0][0,0][1,1]	(* /a,Be --> sigma(/a,Be)   @@   [1,0][0,0][1,1] *)
DH --> BC   At   [1,0][0,0][1,1]	(* /c_rel,d,-case --> sigma(/c_rel,d,-case)   @@   [1,0][0,0][1,1] *)
DY --> BD   At   [1,0][0,0][1,1]	(* /d,+case,Pfor --> sigma(/d,+case,Pfor)   @@   [1,0][0,0][1,1] *)
DZ --> BE   At   [1,0][0,0][1,1]	(* /d,+case,Pto --> sigma(/d,+case,Pto)   @@   [1,0][0,0][1,1] *)
Da --> F   At   [1,0][0,0][1,1]	(* /d,+case,v --> sigma(/d,+case,v)   @@   [1,0][0,0][1,1] *)
Db --> BF   At   [1,0][0,0][1,1]	(* /d,+case,\d,a --> sigma(/d,+case,\d,a)   @@   [1,0][0,0][1,1] *)
Dc --> BG   At   [1,0][0,0][1,1]	(* /little_v,Modal --> sigma(/little_v,Modal)   @@   [1,0][0,0][1,1] *)
Dd --> BH   At   [1,0][0,0][1,1]	(* /little_v,+case,t --> sigma(/little_v,+case,t)   @@   [1,0][0,0][1,1] *)
De --> BI   At   [1,0][0,0][1,1]	(* /n,Num --> sigma(/n,Num)   @@   [1,0][0,0][1,1] *)
Df --> BJ   At   [1,0][0,0][1,1]	(* /p_for,v --> sigma(/p_for,v)   @@   [1,0][0,0][1,1] *)
Dg --> G   At   [1,0][0,0][1,1]	(* /p_to,\d,+case,v --> sigma(/p_to,\d,+case,v)   @@   [1,0][0,0][1,1] *)
Dh --> BK   At   [1,0][0,0][1,1]	(* /t,Ce --> sigma(/t,Ce)   @@   [1,0][0,0][1,1] *)
Di --> BL   At   [1,0][0,0][1,1]	(* /t,c --> sigma(/t,c)   @@   [1,0][0,0][1,1] *)
Dj --> BM   At   [1,0][0,0][1,1]	(* /t,+wh_rel,c_rel --> sigma(/t,+wh_rel,c_rel)   @@   [1,0][0,0][1,1] *)
Dk --> BN   At   [1,0][0,0][1,1]	(* /ven,Have --> sigma(/ven,Have)   @@   [1,0][0,0][1,1] *)
Dl --> BO   At   [1,0][0,0][1,1]	(* /ving,Be --> sigma(/ving,Be)   @@   [1,0][0,0][1,1] *)
Dm --> BP   At   [1,0][0,0][1,1]	(* /ving,Been --> sigma(/ving,Been)   @@   [1,0][0,0][1,1] *)
Dn --> BQ   At   [1,0][0,0][1,1]	(* n==>,Num --> sigma(n==>,Num)   @@   [1,0][0,0][1,1] *)
Do --> f   At   [1,0][0,0][1,1]	(* =>Be,+case,t --> sigma(=>Be,+case,t)   @@   [1,0][0,0][1,1] *)
Dp --> g   At   [1,0][0,0][1,1]	(* =>Have,+case,t --> sigma(=>Have,+case,t)   @@   [1,0][0,0][1,1] *)
Dq --> h   At   [1,0][0,0][1,1]	(* =>Modal,+case,t --> sigma(=>Modal,+case,t)   @@   [1,0][0,0][1,1] *)
Dr --> BR   At   [1,0][0,0][1,1]	(* =>Pfor,p_for --> sigma(=>Pfor,p_for)   @@   [1,0][0,0][1,1] *)
Ds --> BT   At   [1,0][0,0][1,1]	(* =>Pto,p_to --> sigma(=>Pto,p_to)   @@   [1,0][0,0][1,1] *)
Dt --> i   At   [1,0][0,0][1,1]	(* =>little_v,+case,t --> sigma(=>little_v,+case,t)   @@   [1,0][0,0][1,1] *)
Du --> BU   At   [1,0][0,0][1,1]	(* =>v,/d,little_v --> sigma(=>v,/d,little_v)   @@   [1,0][0,0][1,1] *)
Dv --> BV   At   [1,0][0,0][1,1]	(* =>v,/d,ven --> sigma(=>v,/d,ven)   @@   [1,0][0,0][1,1] *)
Dw --> BW   At   [1,0][0,0][1,1]	(* =>v,/d,ving --> sigma(=>v,/d,ving)   @@   [1,0][0,0][1,1] *)
