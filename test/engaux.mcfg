(* g-ne.grm SVIO inspired by Mahajan 2000 *)
(* Parsed: the king have -s be -en eat -ing the pie *)
(* Parsed: who the king have -s be -en eat -ing *)
S --> F   [0,0]	(* S --> C   [0,0] *)
F --> AK   [0,1;0,0]	(* C --> +wh,C;-wh   [0,1;0,0] *)
F --> AO   a   [0,0;1,0]	(* C --> /T,C   T   [0,0;1,0] *)
A --> AL   H   [0,0;1,0]	(* D,-case --> /N,D,-case   N   [0,0;1,0] *)
I --> m   [0,2;0,0][0,1]	(* PastPart,-aux;-case --> +v,PastPart,-aux;-case;-v   [0,2;0,0][0,1] *)
I --> p   [0,1;0,0][0,2]	(* PastPart,-aux;-case --> +v,PastPart,-aux;-v;-case   [0,1;0,0][0,2] *)
J --> n   [0,3;0,0][0,1][0,2]	(* PastPart,-aux;-case;-wh --> +v,PastPart,-aux;-case;-wh;-v   [0,3;0,0][0,1][0,2] *)
J --> q   [0,1;0,0][0,2][0,3]	(* PastPart,-aux;-case;-wh --> +v,PastPart,-aux;-v;-case;-wh   [0,1;0,0][0,2][0,3] *)
K --> o   [0,2;0,0][0,1]	(* PastPart,-aux;-case,-wh --> +v,PastPart,-aux;-case,-wh;-v   [0,2;0,0][0,1] *)
K --> r   [0,1;0,0][0,2]	(* PastPart,-aux;-case,-wh --> +v,PastPart,-aux;-v;-case,-wh   [0,1;0,0][0,2] *)
L --> s   [0,2;0,0][0,1]	(* Prog,-aux;-case --> +v,Prog,-aux;-case;-v   [0,2;0,0][0,1] *)
L --> v   [0,1;0,0][0,2]	(* Prog,-aux;-case --> +v,Prog,-aux;-v;-case   [0,1;0,0][0,2] *)
M --> t   [0,3;0,0][0,1][0,2]	(* Prog,-aux;-case;-wh --> +v,Prog,-aux;-case;-wh;-v   [0,3;0,0][0,1][0,2] *)
M --> w   [0,1;0,0][0,2][0,3]	(* Prog,-aux;-case;-wh --> +v,Prog,-aux;-v;-case;-wh   [0,1;0,0][0,2][0,3] *)
N --> u   [0,2;0,0][0,1]	(* Prog,-aux;-case,-wh --> +v,Prog,-aux;-case,-wh;-v   [0,2;0,0][0,1] *)
N --> x   [0,1;0,0][0,2]	(* Prog,-aux;-case,-wh --> +v,Prog,-aux;-v;-case,-wh   [0,1;0,0][0,2] *)
a --> V   [0,1;0,0]	(* T --> +case,T;-case   [0,1;0,0] *)
O --> W   [0,1;0,0][0,2]	(* T;-wh --> +case,T;-case;-wh   [0,1;0,0][0,2] *)
O --> X   [0,0][0,1]	(* T;-wh --> +case,T;-case,-wh   [0,0][0,1] *)
b --> E   A   [0,0][1,0]	(* V,-v;-case --> /D,V,-v   D,-case   [0,0][1,0] *)
c --> E   G   [0,0][1,0]	(* V,-v;-case,-wh --> /D,V,-v   D,-case,-wh   [0,0][1,0] *)
P --> y   [0,2;0,0][0,1]	(* Vnonfin,-aux;-case --> +v,Vnonfin,-aux;-case;-v   [0,2;0,0][0,1] *)
P --> AB   [0,1;0,0][0,2]	(* Vnonfin,-aux;-case --> +v,Vnonfin,-aux;-v;-case   [0,1;0,0][0,2] *)
Q --> z   [0,3;0,0][0,1][0,2]	(* Vnonfin,-aux;-case;-wh --> +v,Vnonfin,-aux;-case;-wh;-v   [0,3;0,0][0,1][0,2] *)
Q --> AC   [0,1;0,0][0,2][0,3]	(* Vnonfin,-aux;-case;-wh --> +v,Vnonfin,-aux;-v;-case;-wh   [0,1;0,0][0,2][0,3] *)
R --> AA   [0,2;0,0][0,1]	(* Vnonfin,-aux;-case,-wh --> +v,Vnonfin,-aux;-case,-wh;-v   [0,2;0,0][0,1] *)
R --> AD   [0,1;0,0][0,2]	(* Vnonfin,-aux;-case,-wh --> +v,Vnonfin,-aux;-v;-case,-wh   [0,1;0,0][0,2] *)
d --> AY   A   [0,0][1,0][0,1]	(* v;-case;-v --> \D,v;-v   D,-case   [0,0][1,0][0,1] *)
e --> AZ   A   [0,0][1,0][0,1][0,2]	(* v;-case;-wh;-v --> \D,v;-wh;-v   D,-case   [0,0][1,0][0,1][0,2] *)
f --> AY   G   [0,0][1,0][0,1]	(* v;-case,-wh;-v --> \D,v;-v   D,-case,-wh   [0,0][1,0][0,1] *)
T --> h   [0,2;0,0][0,1][0,3]	(* v;-v;-case --> +aux,v;-v;-aux;-case   [0,2;0,0][0,1][0,3] *)
T --> AQ   b   [0,0][1,0][1,1]	(* v;-v;-case --> /V,v   V,-v;-case   [0,0][1,0][1,1] *)
g --> i   [0,2;0,0][0,1][0,3][0,4]	(* v;-v;-case;-wh --> +aux,v;-v;-aux;-case;-wh   [0,2;0,0][0,1][0,3][0,4] *)
U --> j   [0,2;0,0][0,1][0,3]	(* v;-v;-case,-wh --> +aux,v;-v;-aux;-case,-wh   [0,2;0,0][0,1][0,3] *)
U --> AQ   c   [0,0][1,0][1,1]	(* v;-v;-case,-wh --> /V,v   V,-v;-case,-wh   [0,0][1,0][1,1] *)
B --> AM   I   [0,0][1,0][1,1]	(* v,-v;-aux;-case --> /PastPart,v,-v   PastPart,-aux;-case   [0,0][1,0][1,1] *)
B --> AN   L   [0,0][1,0][1,1]	(* v,-v;-aux;-case --> /Prog,v,-v   Prog,-aux;-case   [0,0][1,0][1,1] *)
B --> AT   P   [0,0][1,0][1,1]	(* v,-v;-aux;-case --> /Vnonfin,v,-v   Vnonfin,-aux;-case   [0,0][1,0][1,1] *)
C --> AM   J   [0,0][1,0][1,1][1,2]	(* v,-v;-aux;-case;-wh --> /PastPart,v,-v   PastPart,-aux;-case;-wh   [0,0][1,0][1,1][1,2] *)
C --> AN   M   [0,0][1,0][1,1][1,2]	(* v,-v;-aux;-case;-wh --> /Prog,v,-v   Prog,-aux;-case;-wh   [0,0][1,0][1,1][1,2] *)
C --> AT   Q   [0,0][1,0][1,1][1,2]	(* v,-v;-aux;-case;-wh --> /Vnonfin,v,-v   Vnonfin,-aux;-case;-wh   [0,0][1,0][1,1][1,2] *)
D --> AM   K   [0,0][1,0][1,1]	(* v,-v;-aux;-case,-wh --> /PastPart,v,-v   PastPart,-aux;-case,-wh   [0,0][1,0][1,1] *)
D --> AN   N   [0,0][1,0][1,1]	(* v,-v;-aux;-case,-wh --> /Prog,v,-v   Prog,-aux;-case,-wh   [0,0][1,0][1,1] *)
D --> AT   R   [0,0][1,0][1,1]	(* v,-v;-aux;-case,-wh --> /Vnonfin,v,-v   Vnonfin,-aux;-case,-wh   [0,0][1,0][1,1] *)
h --> AU   B   [0,0][1,0][1,1][1,2]	(* +aux,v;-v;-aux;-case --> /v,+aux,v   v,-v;-aux;-case   [0,0][1,0][1,1][1,2] *)
i --> AU   C   [0,0][1,0][1,1][1,2][1,3]	(* +aux,v;-v;-aux;-case;-wh --> /v,+aux,v   v,-v;-aux;-case;-wh   [0,0][1,0][1,1][1,2][1,3] *)
j --> AU   D   [0,0][1,0][1,1][1,2]	(* +aux,v;-v;-aux;-case,-wh --> /v,+aux,v   v,-v;-aux;-case,-wh   [0,0][1,0][1,1][1,2] *)
V --> AE   [0,2;0,0][0,1]	(* +case,T;-case --> +v,+case,T;-case;-v   [0,2;0,0][0,1] *)
V --> AH   [0,1;0,0][0,2]	(* +case,T;-case --> +v,+case,T;-v;-case   [0,1;0,0][0,2] *)
W --> AF   [0,3;0,0][0,1][0,2]	(* +case,T;-case;-wh --> +v,+case,T;-case;-wh;-v   [0,3;0,0][0,1][0,2] *)
W --> AI   [0,1;0,0][0,2][0,3]	(* +case,T;-case;-wh --> +v,+case,T;-v;-case;-wh   [0,1;0,0][0,2][0,3] *)
X --> AG   [0,2;0,0][0,1]	(* +case,T;-case,-wh --> +v,+case,T;-case,-wh;-v   [0,2;0,0][0,1] *)
X --> AJ   [0,1;0,0][0,2]	(* +case,T;-case,-wh --> +v,+case,T;-v;-case,-wh   [0,1;0,0][0,2] *)
k --> AR   b   [0,0][1,0][1,1]	(* +case,\D,v;-v;-case --> /V,+case,\D,v   V,-v;-case   [0,0][1,0][1,1] *)
l --> AR   c   [0,0][1,0][1,1]	(* +case,\D,v;-v;-case,-wh --> /V,+case,\D,v   V,-v;-case,-wh   [0,0][1,0][1,1] *)
m --> Y   d   [0,0;1,0][1,1][1,2]	(* +v,PastPart,-aux;-case;-v --> /v,+v,PastPart,-aux   v;-case;-v   [0,0;1,0][1,1][1,2] *)
n --> Y   e   [0,0;1,0][1,1][1,2][1,3]	(* +v,PastPart,-aux;-case;-wh;-v --> /v,+v,PastPart,-aux   v;-case;-wh;-v   [0,0;1,0][1,1][1,2][1,3] *)
o --> Y   f   [0,0;1,0][1,1][1,2]	(* +v,PastPart,-aux;-case,-wh;-v --> /v,+v,PastPart,-aux   v;-case,-wh;-v   [0,0;1,0][1,1][1,2] *)
p --> Y   T   [0,0;1,0][1,1][1,2]	(* +v,PastPart,-aux;-v;-case --> /v,+v,PastPart,-aux   v;-v;-case   [0,0;1,0][1,1][1,2] *)
q --> Y   g   [0,0;1,0][1,1][1,2][1,3]	(* +v,PastPart,-aux;-v;-case;-wh --> /v,+v,PastPart,-aux   v;-v;-case;-wh   [0,0;1,0][1,1][1,2][1,3] *)
r --> Y   U   [0,0;1,0][1,1][1,2]	(* +v,PastPart,-aux;-v;-case,-wh --> /v,+v,PastPart,-aux   v;-v;-case,-wh   [0,0;1,0][1,1][1,2] *)
s --> AV   d   [0,0;1,0][1,1][1,2]	(* +v,Prog,-aux;-case;-v --> /v,+v,Prog,-aux   v;-case;-v   [0,0;1,0][1,1][1,2] *)
t --> AV   e   [0,0;1,0][1,1][1,2][1,3]	(* +v,Prog,-aux;-case;-wh;-v --> /v,+v,Prog,-aux   v;-case;-wh;-v   [0,0;1,0][1,1][1,2][1,3] *)
u --> AV   f   [0,0;1,0][1,1][1,2]	(* +v,Prog,-aux;-case,-wh;-v --> /v,+v,Prog,-aux   v;-case,-wh;-v   [0,0;1,0][1,1][1,2] *)
v --> AV   T   [0,0;1,0][1,1][1,2]	(* +v,Prog,-aux;-v;-case --> /v,+v,Prog,-aux   v;-v;-case   [0,0;1,0][1,1][1,2] *)
w --> AV   g   [0,0;1,0][1,1][1,2][1,3]	(* +v,Prog,-aux;-v;-case;-wh --> /v,+v,Prog,-aux   v;-v;-case;-wh   [0,0;1,0][1,1][1,2][1,3] *)
x --> AV   U   [0,0;1,0][1,1][1,2]	(* +v,Prog,-aux;-v;-case,-wh --> /v,+v,Prog,-aux   v;-v;-case,-wh   [0,0;1,0][1,1][1,2] *)
y --> AW   d   [0,0;1,0][1,1][1,2]	(* +v,Vnonfin,-aux;-case;-v --> /v,+v,Vnonfin,-aux   v;-case;-v   [0,0;1,0][1,1][1,2] *)
z --> AW   e   [0,0;1,0][1,1][1,2][1,3]	(* +v,Vnonfin,-aux;-case;-wh;-v --> /v,+v,Vnonfin,-aux   v;-case;-wh;-v   [0,0;1,0][1,1][1,2][1,3] *)
AA --> AW   f   [0,0;1,0][1,1][1,2]	(* +v,Vnonfin,-aux;-case,-wh;-v --> /v,+v,Vnonfin,-aux   v;-case,-wh;-v   [0,0;1,0][1,1][1,2] *)
AB --> AW   T   [0,0;1,0][1,1][1,2]	(* +v,Vnonfin,-aux;-v;-case --> /v,+v,Vnonfin,-aux   v;-v;-case   [0,0;1,0][1,1][1,2] *)
AC --> AW   g   [0,0;1,0][1,1][1,2][1,3]	(* +v,Vnonfin,-aux;-v;-case;-wh --> /v,+v,Vnonfin,-aux   v;-v;-case;-wh   [0,0;1,0][1,1][1,2][1,3] *)
AD --> AW   U   [0,0;1,0][1,1][1,2]	(* +v,Vnonfin,-aux;-v;-case,-wh --> /v,+v,Vnonfin,-aux   v;-v;-case,-wh   [0,0;1,0][1,1][1,2] *)
AE --> AX   d   [0,0;1,0][1,1][1,2]	(* +v,+case,T;-case;-v --> /v,+v,+case,T   v;-case;-v   [0,0;1,0][1,1][1,2] *)
AF --> AX   e   [0,0;1,0][1,1][1,2][1,3]	(* +v,+case,T;-case;-wh;-v --> /v,+v,+case,T   v;-case;-wh;-v   [0,0;1,0][1,1][1,2][1,3] *)
AG --> AX   f   [0,0;1,0][1,1][1,2]	(* +v,+case,T;-case,-wh;-v --> /v,+v,+case,T   v;-case,-wh;-v   [0,0;1,0][1,1][1,2] *)
AH --> AX   T   [0,0;1,0][1,1][1,2]	(* +v,+case,T;-v;-case --> /v,+v,+case,T   v;-v;-case   [0,0;1,0][1,1][1,2] *)
AI --> AX   g   [0,0;1,0][1,1][1,2][1,3]	(* +v,+case,T;-v;-case;-wh --> /v,+v,+case,T   v;-v;-case;-wh   [0,0;1,0][1,1][1,2][1,3] *)
AJ --> AX   U   [0,0;1,0][1,1][1,2]	(* +v,+case,T;-v;-case,-wh --> /v,+v,+case,T   v;-v;-case,-wh   [0,0;1,0][1,1][1,2] *)
AK --> AP   O   [0,0;1,0][1,1]	(* +wh,C;-wh --> /T,+wh,C   T;-wh   [0,0;1,0][1,1] *)
AY --> k   [0,2;0,0][0,1]	(* \D,v;-v --> +case,\D,v;-v;-case   [0,2;0,0][0,1] *)
AZ --> l   [0,0][0,2][0,1]	(* \D,v;-wh;-v --> +case,\D,v;-v;-case,-wh   [0,0][0,2][0,1] *)
A --> "Juliet"	(* D,-case --> "Juliet" *)
A --> "Lavinia"	(* D,-case --> "Lavinia" *)
A --> "Romeo"	(* D,-case --> "Romeo" *)
A --> "Titus"	(* D,-case --> "Titus" *)
G --> "what"	(* D,-case,-wh --> "what" *)
G --> "who"	(* D,-case,-wh --> "who" *)
H --> "king"	(* N --> "king" *)
H --> "pie"	(* N --> "pie" *)
E --> "eat"	(* /D,V,-v --> "eat" *)
E --> "laugh"	(* /D,V,-v --> "laugh" *)
E --> "love"	(* /D,V,-v --> "love" *)
AL --> "the"	(* /N,D,-case --> "the" *)
AM --> "have"	(* /PastPart,v,-v --> "have" *)
AN --> "be"	(* /Prog,v,-v --> "be" *)
AO --> ""	(* /T,C --> "" *)
AP --> ""	(* /T,+wh,C --> "" *)
AQ --> ""	(* /V,v --> "" *)
AR --> ""	(* /V,+case,\D,v --> "" *)
AT --> "will"	(* /Vnonfin,v,-v --> "will" *)
AU --> ""	(* /v,+aux,v --> "" *)
Y --> "-ed"	(* /v,+v,PastPart,-aux --> "-ed" *)
Y --> "-en"	(* /v,+v,PastPart,-aux --> "-en" *)
AV --> "-ing"	(* /v,+v,Prog,-aux --> "-ing" *)
AW --> ""	(* /v,+v,Vnonfin,-aux --> "" *)
AX --> "-s"	(* /v,+v,+case,T --> "-s" *)
